<?xml version="1.0" encoding="utf-8"?>
<abapGit version="v1.0.0" serializer="LCL_OBJECT_CLAS" serializer_version="v1.0.0">
 <asx:abap xmlns:asx="http://www.sap.com/abapxml" version="1.0">
  <asx:values>
   <VSEOCLASS>
    <CLSNAME>ZCL_LLM_00_CHAT_IN</CLSNAME>
    <LANGU>E</LANGU>
    <DESCRIPT>Describe, and Call FM from OpenAI</DESCRIPT>
    <STATE>1</STATE>
    <CLSCCINCL>X</CLSCCINCL>
    <FIXPT>X</FIXPT>
    <UNICODE>X</UNICODE>
    <WITH_UNIT_TESTS>X</WITH_UNIT_TESTS>
   </VSEOCLASS>
   <LINES>
    <TLINE>
     <TDFORMAT>U1</TDFORMAT>
     <TDLINE>ABAP Component Documentation: ZCL_LLM_00_CHAT_IN</TDLINE>
    </TLINE>
    <TLINE/>
    <TLINE/>
    <TLINE>
     <TDFORMAT>U2</TDFORMAT>
     <TDLINE>1. Component Overview</TDLINE>
    </TLINE>
    <TLINE/>
    <TLINE/>
    <TLINE>
     <TDFORMAT>B1</TDFORMAT>
     <TDLINE>  &lt;B&gt;Type&lt;/&gt;: ABAP Class (&lt;U&gt;ZCL_LLM_00_CHAT_IN&lt;/&gt;)</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>B1</TDFORMAT>
     <TDLINE>  &lt;B&gt;Technical Category&lt;/&gt;: Data Transfer Object (DTO) / Serialization</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>/</TDFORMAT>
     <TDLINE>Helper</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>B1</TDFORMAT>
     <TDLINE>  &lt;B&gt;System Role&lt;/&gt;: Input structure for LLM (Large Language Model)</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>/</TDFORMAT>
     <TDLINE>chat requests, including JSON serialization/deserialization</TDLINE>
    </TLINE>
    <TLINE/>
    <TLINE>
     <TDFORMAT>U3</TDFORMAT>
     <TDLINE>Location &amp;(and)&amp; Namespace</TDLINE>
    </TLINE>
    <TLINE/>
    <TLINE/>
    <TLINE>
     <TDFORMAT>B1</TDFORMAT>
     <TDLINE>  &lt;B&gt;Namespace&lt;/&gt;: ZCL_LLM_00*</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>B1</TDFORMAT>
     <TDLINE>  &lt;B&gt;Package&lt;/&gt;: $ZLLM_00 (Lightweight LLM Module)</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>B1</TDFORMAT>
     <TDLINE>  &lt;B&gt;Layer&lt;/&gt;: Analytical/AI Integration Layer</TDLINE>
    </TLINE>
    <TLINE/>
    <TLINE>
     <TDFORMAT>U3</TDFORMAT>
     <TDLINE>Component Role in System Architecture</TDLINE>
    </TLINE>
    <TLINE/>
    <TLINE/>
    <TLINE>
     <TDFORMAT>*</TDFORMAT>
     <TDLINE>&lt;U&gt;ZCL_LLM_00_CHAT_IN&lt;/&gt; acts as a structured container for chat input</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>/</TDFORMAT>
     <TDLINE>parameters to an LLM (e.g., OpenAI), providing methods for</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>/</TDFORMAT>
     <TDLINE>instantiation, JSON parsing, and serialization. It is a key part of the</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>/</TDFORMAT>
     <TDLINE>data flow between ABAP and external AI services.</TDLINE>
    </TLINE>
    <TLINE/>
    <TLINE/>
    <TLINE>
     <TDFORMAT>*</TDFORMAT>
     <TDLINE>------------------------------------------------------------------------</TDLINE>
    </TLINE>
    <TLINE/>
    <TLINE>
     <TDFORMAT>U2</TDFORMAT>
     <TDLINE>2. Technical Analysis</TDLINE>
    </TLINE>
    <TLINE/>
    <TLINE/>
    <TLINE>
     <TDFORMAT>U3</TDFORMAT>
     <TDLINE>2.1 Core Functionality</TDLINE>
    </TLINE>
    <TLINE/>
    <TLINE/>
    <TLINE>
     <TDFORMAT>B1</TDFORMAT>
     <TDLINE>  &lt;B&gt;Purpose&lt;/&gt;: Encapsulates all input parameters required for an LLM</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>/</TDFORMAT>
     <TDLINE>chat/completion request, such as messages, temperature, and top_p.</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>B1</TDFORMAT>
     <TDLINE>  &lt;B&gt;Serialization&lt;/&gt;: Implements JSON interface for easy conversion</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>/</TDFORMAT>
     <TDLINE>to/from JSON, facilitating API communication.</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>B1</TDFORMAT>
     <TDLINE>  &lt;B&gt;Defaulting&lt;/&gt;: Ensures sensible defaults for critical parameters</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>/</TDFORMAT>
     <TDLINE>(&lt;U&gt;temperature&lt;/&gt;, &lt;U&gt;top_p&lt;/&gt;) if not provided.</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>B1</TDFORMAT>
     <TDLINE>  &lt;B&gt;Construction&lt;/&gt;: Provides multiple constructors for direct ABAP</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>/</TDFORMAT>
     <TDLINE>structure input and JSON string input.</TDLINE>
    </TLINE>
    <TLINE/>
    <TLINE>
     <TDFORMAT>U4</TDFORMAT>
     <TDLINE>Main Operations</TDLINE>
    </TLINE>
    <TLINE/>
    <TLINE/>
    <TLINE>
     <TDFORMAT>B1</TDFORMAT>
     <TDLINE>  &lt;B&gt;new&lt;/&gt;: Instantiates the class from an ABAP structure (&lt;U&gt;ts_&lt;/&gt;).</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>B1</TDFORMAT>
     <TDLINE>  &lt;B&gt;new_from_json&lt;/&gt;: Instantiates the class from a JSON string,</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>/</TDFORMAT>
     <TDLINE>parsing it into the ABAP structure.</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>B1</TDFORMAT>
     <TDLINE>  &lt;B&gt;get_&lt;/&gt;: Returns the internal structure (&lt;U&gt;ts_&lt;/&gt;) for further</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>/</TDFORMAT>
     <TDLINE>processing.</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>B1</TDFORMAT>
     <TDLINE>  &lt;B&gt;to_json&lt;/&gt;: Serializes the internal structure to a JSON string for</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>/</TDFORMAT>
     <TDLINE>API calls.</TDLINE>
    </TLINE>
    <TLINE/>
    <TLINE>
     <TDFORMAT>U3</TDFORMAT>
     <TDLINE>2.2 Technical Architecture</TDLINE>
    </TLINE>
    <TLINE/>
    <TLINE/>
    <TLINE>
     <TDFORMAT>B1</TDFORMAT>
     <TDLINE>  &lt;B&gt;Interfaces&lt;/&gt;:</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>B2</TDFORMAT>
     <TDLINE>  &lt;U&gt;zif_llm_00_json&lt;/&gt;: For JSON serialization/deserialization.</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>B2</TDFORMAT>
     <TDLINE>  &lt;U&gt;zif_llm_00_types&lt;/&gt;: For type definitions (specifically,</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>/</TDFORMAT>
     <TDLINE>&lt;U&gt;ts_chat_in&lt;/&gt;).</TDLINE>
    </TLINE>
    <TLINE/>
    <TLINE>
     <TDFORMAT>B1</TDFORMAT>
     <TDLINE>  &lt;B&gt;Dependencies&lt;/&gt;:</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>B2</TDFORMAT>
     <TDLINE>  &lt;U&gt;zcl_llm_00_json&lt;/&gt;: Utility for JSON parsing and serialization.</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>B2</TDFORMAT>
     <TDLINE>  &lt;U&gt;zif_llm_00_types&lt;/&gt;: Provides the structure definition for chat</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>/</TDFORMAT>
     <TDLINE>input.</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>B2</TDFORMAT>
     <TDLINE>  Exception class &lt;U&gt;zcx_s&lt;/&gt;: Used for error signaling during</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>/</TDFORMAT>
     <TDLINE>construction.</TDLINE>
    </TLINE>
    <TLINE/>
    <TLINE>
     <TDFORMAT>B1</TDFORMAT>
     <TDLINE>  &lt;B&gt;Data Flow&lt;/&gt;:</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>B2</TDFORMAT>
     <TDLINE>  Receives input as either an ABAP structure or JSON string.</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>B2</TDFORMAT>
     <TDLINE>  Converts and stores input in internal structure (&lt;U&gt;ms_&lt;/&gt;).</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>B2</TDFORMAT>
     <TDLINE>  Provides output as either ABAP structure or JSON string.</TDLINE>
    </TLINE>
    <TLINE/>
    <TLINE>
     <TDFORMAT>U4</TDFORMAT>
     <TDLINE>Data Members</TDLINE>
    </TLINE>
    <TLINE/>
    <TLINE/>
    <TLINE>
     <TDFORMAT>B1</TDFORMAT>
     <TDLINE>  &lt;U&gt;ms_&lt;/&gt;: Stores the chat input structure (&lt;U&gt;ts_&lt;/&gt;).</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>B1</TDFORMAT>
     <TDLINE>  &lt;U&gt;gv_msg&lt;/&gt;: String for potential message handling (not actively</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>/</TDFORMAT>
     <TDLINE>used in current implementation).</TDLINE>
    </TLINE>
    <TLINE/>
    <TLINE>
     <TDFORMAT>U3</TDFORMAT>
     <TDLINE>2.3 Implementation Details</TDLINE>
    </TLINE>
    <TLINE/>
    <TLINE/>
    <TLINE>
     <TDFORMAT>B1</TDFORMAT>
     <TDLINE>  &lt;B&gt;Defaulting Logic&lt;/&gt;: In the constructor, if &lt;U&gt;temperature&lt;/&gt; or</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>/</TDFORMAT>
     <TDLINE>&lt;U&gt;top_p&lt;/&gt; are not provided, they are set to &lt;U&gt;&apos;0.1&apos;&lt;/&gt; and</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>/</TDFORMAT>
     <TDLINE>&lt;U&gt;&apos;1.0&apos;&lt;/&gt; respectively, ensuring the LLM receives valid parameters.</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>B1</TDFORMAT>
     <TDLINE>  &lt;B&gt;JSON Handling&lt;/&gt;: Uses &lt;U&gt;zcl_llm_00_json&lt;/&gt; for both parsing</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>/</TDFORMAT>
     <TDLINE>(&lt;U&gt;from_json&lt;/&gt;) and serialization (&lt;U&gt;to_json&lt;/&gt;).</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>B1</TDFORMAT>
     <TDLINE>  &lt;B&gt;Error Handling&lt;/&gt;: Constructor can raise &lt;U&gt;zcx_s&lt;/&gt; if</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>/</TDFORMAT>
     <TDLINE>instantiation fails (though no explicit error logic is present in the</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>/</TDFORMAT>
     <TDLINE>code shown).</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>B1</TDFORMAT>
     <TDLINE>  &lt;B&gt;Immutability&lt;/&gt;: Once constructed, the internal state is not meant</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>/</TDFORMAT>
     <TDLINE>to be changed (no setters).</TDLINE>
    </TLINE>
    <TLINE/>
    <TLINE>
     <TDFORMAT>*</TDFORMAT>
     <TDLINE>------------------------------------------------------------------------</TDLINE>
    </TLINE>
    <TLINE/>
    <TLINE>
     <TDFORMAT>U2</TDFORMAT>
     <TDLINE>3. Business Context</TDLINE>
    </TLINE>
    <TLINE/>
    <TLINE/>
    <TLINE>
     <TDFORMAT>U3</TDFORMAT>
     <TDLINE>3.1 Business Purpose</TDLINE>
    </TLINE>
    <TLINE/>
    <TLINE/>
    <TLINE>
     <TDFORMAT>B1</TDFORMAT>
     <TDLINE>  &lt;B&gt;Domain&lt;/&gt;: AI/LLM Integration for SAP</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>B1</TDFORMAT>
     <TDLINE>  &lt;B&gt;Objective&lt;/&gt;: Standardizes and validates input for LLM</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>/</TDFORMAT>
     <TDLINE>chat/completion requests, ensuring robust and predictable communication</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>/</TDFORMAT>
     <TDLINE>with AI services (e.g., OpenAI).</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>B1</TDFORMAT>
     <TDLINE>  &lt;B&gt;Significance&lt;/&gt;: Reduces integration errors, simplifies API</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>/</TDFORMAT>
     <TDLINE>consumption, and enforces parameter consistency.</TDLINE>
    </TLINE>
    <TLINE/>
    <TLINE>
     <TDFORMAT>U3</TDFORMAT>
     <TDLINE>3.2 Process Integration</TDLINE>
    </TLINE>
    <TLINE/>
    <TLINE/>
    <TLINE>
     <TDFORMAT>B1</TDFORMAT>
     <TDLINE>  &lt;B&gt;Upstream&lt;/&gt;: Receives input from ABAP business logic or UI,</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>/</TDFORMAT>
     <TDLINE>possibly from user prompts or automated processes.</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>B1</TDFORMAT>
     <TDLINE>  &lt;B&gt;Downstream&lt;/&gt;: Feeds into LLM API adapters or connectors, which</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>/</TDFORMAT>
     <TDLINE>serialize the input to JSON and send it to external AI endpoints.</TDLINE>
    </TLINE>
    <TLINE/>
    <TLINE>
     <TDFORMAT>U3</TDFORMAT>
     <TDLINE>3.3 Operational Impact</TDLINE>
    </TLINE>
    <TLINE/>
    <TLINE/>
    <TLINE>
     <TDFORMAT>B1</TDFORMAT>
     <TDLINE>  &lt;B&gt;Reliability&lt;/&gt;: Ensures that all LLM requests have required</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>/</TDFORMAT>
     <TDLINE>parameters, reducing runtime errors.</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>B1</TDFORMAT>
     <TDLINE>  &lt;B&gt;Maintainability&lt;/&gt;: Centralizes input structure, making it easier</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>/</TDFORMAT>
     <TDLINE>to adapt to changes in LLM API requirements.</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>B1</TDFORMAT>
     <TDLINE>  &lt;B&gt;Extensibility&lt;/&gt;: New parameters can be added to the structure and</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>/</TDFORMAT>
     <TDLINE>handled in one place.</TDLINE>
    </TLINE>
    <TLINE/>
    <TLINE>
     <TDFORMAT>*</TDFORMAT>
     <TDLINE>------------------------------------------------------------------------</TDLINE>
    </TLINE>
    <TLINE/>
    <TLINE>
     <TDFORMAT>U2</TDFORMAT>
     <TDLINE>4. Support &amp;(and)&amp; Maintenance</TDLINE>
    </TLINE>
    <TLINE/>
    <TLINE/>
    <TLINE>
     <TDFORMAT>U3</TDFORMAT>
     <TDLINE>4.1 Configuration</TDLINE>
    </TLINE>
    <TLINE/>
    <TLINE/>
    <TLINE>
     <TDFORMAT>B1</TDFORMAT>
     <TDLINE>  &lt;B&gt;No direct configuration&lt;/&gt;: Relies on structure definitions and</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>/</TDFORMAT>
     <TDLINE>defaults coded in the class.</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>B1</TDFORMAT>
     <TDLINE>  &lt;B&gt;Extensible&lt;/&gt;: If LLM API changes, update &lt;U&gt;ts_chat_in&lt;/&gt; in</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>/</TDFORMAT>
     <TDLINE>&lt;U&gt;zif_llm_00_types&lt;/&gt; and adjust defaulting logic as needed.</TDLINE>
    </TLINE>
    <TLINE/>
    <TLINE>
     <TDFORMAT>U3</TDFORMAT>
     <TDLINE>4.2 Monitoring</TDLINE>
    </TLINE>
    <TLINE/>
    <TLINE/>
    <TLINE>
     <TDFORMAT>B1</TDFORMAT>
     <TDLINE>  &lt;B&gt;Error Handling&lt;/&gt;: Monitor for exceptions of type &lt;U&gt;zcx_s&lt;/&gt;</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>/</TDFORMAT>
     <TDLINE>during instantiation.</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>B1</TDFORMAT>
     <TDLINE>  &lt;B&gt;Parameter Defaults&lt;/&gt;: Ensure that default values for</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>/</TDFORMAT>
     <TDLINE>&lt;U&gt;temperature&lt;/&gt; and &lt;U&gt;top_p&lt;/&gt; are appropriate for business needs.</TDLINE>
    </TLINE>
    <TLINE/>
    <TLINE>
     <TDFORMAT>U3</TDFORMAT>
     <TDLINE>4.3 Common Issues</TDLINE>
    </TLINE>
    <TLINE/>
    <TLINE/>
    <TLINE>
     <TDFORMAT>B1</TDFORMAT>
     <TDLINE>  &lt;B&gt;JSON Structure Mismatch&lt;/&gt;: If the JSON input does not match</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>/</TDFORMAT>
     <TDLINE>&lt;U&gt;ts_chat_in&lt;/&gt;, parsing will fail.</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>B1</TDFORMAT>
     <TDLINE>  &lt;B&gt;Missing Parameters&lt;/&gt;: If upstream logic omits required fields,</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>/</TDFORMAT>
     <TDLINE>defaults are applied, but business logic should verify if this is</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>/</TDFORMAT>
     <TDLINE>acceptable.</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>B1</TDFORMAT>
     <TDLINE>  &lt;B&gt;API Changes&lt;/&gt;: If the external LLM API changes required</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>/</TDFORMAT>
     <TDLINE>parameters, the structure and defaulting logic must be updated.</TDLINE>
    </TLINE>
    <TLINE/>
    <TLINE>
     <TDFORMAT>*</TDFORMAT>
     <TDLINE>------------------------------------------------------------------------</TDLINE>
    </TLINE>
    <TLINE/>
    <TLINE>
     <TDFORMAT>U2</TDFORMAT>
     <TDLINE>5. Additional Information</TDLINE>
    </TLINE>
    <TLINE/>
    <TLINE/>
    <TLINE>
     <TDFORMAT>B1</TDFORMAT>
     <TDLINE>  &lt;B&gt;Author&lt;/&gt;: Not specified</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>B1</TDFORMAT>
     <TDLINE>  &lt;B&gt;Last Updated&lt;/&gt;: Not specified</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>B1</TDFORMAT>
     <TDLINE>  &lt;B&gt;Version&lt;/&gt;: Not specified</TDLINE>
    </TLINE>
    <TLINE/>
    <TLINE>
     <TDFORMAT>*</TDFORMAT>
     <TDLINE>------------------------------------------------------------------------</TDLINE>
    </TLINE>
    <TLINE/>
    <TLINE>
     <TDFORMAT>U3</TDFORMAT>
     <TDLINE>Related Components</TDLINE>
    </TLINE>
    <TLINE/>
    <TLINE/>
    <TLINE>
     <TDFORMAT>B1</TDFORMAT>
     <TDLINE>  &lt;B&gt;zcl_llm_00_json&lt;/&gt;: Handles JSON parsing/serialization.</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>B1</TDFORMAT>
     <TDLINE>  &lt;B&gt;zif_llm_00_types&lt;/&gt;: Defines the &lt;U&gt;ts_chat_in&lt;/&gt; structure.</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>B1</TDFORMAT>
     <TDLINE>  &lt;B&gt;zcx_s&lt;/&gt;: Exception class for error signaling.</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>B1</TDFORMAT>
     <TDLINE>  &lt;B&gt;LLM API Adapters&lt;/&gt;: Classes that consume this input for API calls</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>/</TDFORMAT>
     <TDLINE>(e.g., &lt;U&gt;zcl_llm_00_llm_lazy&lt;/&gt;, &lt;U&gt;zcl_llm_00_payload_adapter_4o&lt;/&gt;).</TDLINE>
    </TLINE>
    <TLINE/>
    <TLINE>
     <TDFORMAT>*</TDFORMAT>
     <TDLINE>------------------------------------------------------------------------</TDLINE>
    </TLINE>
    <TLINE/>
    <TLINE>
     <TDFORMAT>U2</TDFORMAT>
     <TDLINE>Example Usage</TDLINE>
    </TLINE>
    <TLINE/>
    <TLINE/>
    <TLINE>
     <TDFORMAT>/(</TDFORMAT>
     <TDLINE>&quot; Construct from ABAP structure</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>/(</TDFORMAT>
     <TDLINE>DATA(lo_chat_in) = zcl_llm_00_chat_in=&gt;new( is_ = ls_chat_in ).</TDLINE>
    </TLINE>
    <TLINE/>
    <TLINE>
     <TDFORMAT>*</TDFORMAT>
     <TDLINE>&quot; Construct from JSON string DATA(lo_chat_in) =</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>/</TDFORMAT>
     <TDLINE>zcl_llm_00_chat_in=&gt;new_from_json( iv_ = lv_json ).</TDLINE>
    </TLINE>
    <TLINE/>
    <TLINE/>
    <TLINE>
     <TDFORMAT>*</TDFORMAT>
     <TDLINE>&quot; Get ABAP structure for further processing DATA(ls_chat_in) =</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>/</TDFORMAT>
     <TDLINE>lo_chat_in-&gt;get_( ).</TDLINE>
    </TLINE>
    <TLINE/>
    <TLINE/>
    <TLINE>
     <TDFORMAT>/(</TDFORMAT>
     <TDLINE>&quot; Serialize to JSON for API call</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>/(</TDFORMAT>
     <TDLINE>DATA(lv_json) = lo_chat_in-&gt;get_json( ).</TDLINE>
    </TLINE>
    <TLINE/>
    <TLINE>
     <TDFORMAT>*</TDFORMAT>
     <TDLINE>------------------------------------------------------------------------</TDLINE>
    </TLINE>
    <TLINE/>
    <TLINE>
     <TDFORMAT>U2</TDFORMAT>
     <TDLINE>Security Considerations</TDLINE>
    </TLINE>
    <TLINE/>
    <TLINE/>
    <TLINE>
     <TDFORMAT>B1</TDFORMAT>
     <TDLINE>  &lt;B&gt;Input Validation&lt;/&gt;: Ensure that input data is sanitized before</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>/</TDFORMAT>
     <TDLINE>passing to LLM APIs to prevent injection or abuse.</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>B1</TDFORMAT>
     <TDLINE>  &lt;B&gt;Sensitive Data&lt;/&gt;: Avoid including confidential information in</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>/</TDFORMAT>
     <TDLINE>chat input unless the LLM endpoint is trusted and compliant with data</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>/</TDFORMAT>
     <TDLINE>protection policies.</TDLINE>
    </TLINE>
    <TLINE/>
    <TLINE>
     <TDFORMAT>*</TDFORMAT>
     <TDLINE>------------------------------------------------------------------------</TDLINE>
    </TLINE>
    <TLINE/>
    <TLINE>
     <TDFORMAT>U2</TDFORMAT>
     <TDLINE>Summary</TDLINE>
    </TLINE>
    <TLINE/>
    <TLINE/>
    <TLINE>
     <TDFORMAT>*</TDFORMAT>
     <TDLINE>&lt;U&gt;ZCL_LLM_00_CHAT_IN&lt;/&gt; is a foundational class for LLM integration in</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>/</TDFORMAT>
     <TDLINE>SAP, standardizing input handling, providing robust serialization, and</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>/</TDFORMAT>
     <TDLINE>ensuring parameter consistency for AI-driven processes. It is critical</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>/</TDFORMAT>
     <TDLINE>for maintainable, reliable, and extensible AI integrations within the</TDLINE>
    </TLINE>
    <TLINE>
     <TDFORMAT>/</TDFORMAT>
     <TDLINE>SAP ecosystem.</TDLINE>
    </TLINE>
    <TLINE/>
   </LINES>
   <DESCRIPTIONS_SUB>
    <SEOSUBCOTX>
     <CMPNAME>NEW</CMPNAME>
     <SCONAME>IS_</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>ABAP Function Name</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>NEW</CMPNAME>
     <SCONAME>RO_</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Describe, and Call FM from OpenAI</DESCRIPT>
    </SEOSUBCOTX>
    <SEOSUBCOTX>
     <CMPNAME>NEW_FROM_JSON</CMPNAME>
     <SCONAME>RO_</SCONAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Describe, and Call FM from OpenAI</DESCRIPT>
    </SEOSUBCOTX>
   </DESCRIPTIONS_SUB>
  </asx:values>
 </asx:abap>
</abapGit>
